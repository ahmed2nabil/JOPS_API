openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
  - url: https://jobs-api-pjk0.onrender.com/api/v1
    variables: {}
paths:
  /jobs:
    get:
      tags:
        - jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateJobRequest'
                - example:
                    company: netflix
                    position: backend developer
            example:
              company: netflix
              position: backend developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - jobs
      summary: Get a Job
      operationId: GetaJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    put:
      tags:
        - jobs
      summary: udpate Job
      operationId: udpateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/udpateJobRequest'
                - example:
                    company: netflix
                    position: fullstack developer
            example:
              company: netflix
              position: fullstack developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - jobs
      summary: delete job
      operationId: deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/register:
    post:
      tags:
        - auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisterUserRequest'
                - example:
                    name: nebo
                    email: nebo11@gmail.com
                    password: '1234567'
            example:
              name: nebo
              email: nebo11@gmail.com
              password: '1234567'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginUserRequest'
                - example:
                    email: nebo11@gmail.com
                    password: '1234567'
            example:
              email: nebo11@gmail.com
              password: '1234567'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix
        position: backend developer
    udpateJobRequest:
      title: udpateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix
        position: fullstack developer
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: nebo
        email: nebo11@gmail.com
        password: '1234567'
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: nebo11@gmail.com
        password: '1234567'
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: jobs
    description: ''
  - name: auth
    description: ''
